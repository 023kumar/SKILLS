{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO+BHJxVhPampcORk6dxKqa"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rrTTfPAqATAI"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["Python Theory and Practical Questions with Answers\n","Theory Questions and Answers\n","\n","1.What is Python, and why is it popular?\n","\n","=Python is a high-level programming language known for its simple syntax and readability. It is widely used in areas like web development, data science, automation, and AI. It became popular because it's beginner-friendly, easy to write, and has a huge library of tools.\n","\n","2.What is an interpreter in Python?\n","\n","=An interpreter in Python is a program that reads and executes the code line by line. It doesn't compile the entire code at once, making it easier to debug and test parts of the code\n","\n","3.What are pre-defined keywords in Python?\n","\n","=Pre-defined keywords in Python are reserved words that have special meanings and purposes. Examples include if, else, while, True, False, etc. They are part of the language itself.\n","\n","4.Can keywords be used as variable names?\n","\n","=No, Python does not allow keywords to be used as variable names because they are already defined for specific purposes in the language.\n","\n","5.What is mutability in Python?\n","\n","=Mutability refers to whether an object can be changed after it is created. If it can be modified like a list}, it is mutable. If not (like a tuple), it is immutable.\n","\n","\n","\n"],"metadata":{"id":"B-TgEDMfAVKm"}},{"cell_type":"markdown","source":["6.Why are lists mutable but tuples are immutable?\n","\n","=Lists are designed to be flexible and allow changes like adding, removing, or updating elements. Tuples, on the other hand, are meant to store fixed data and are faster because they don't allow changes once created.\n","\n","7.What is the difference between “==” and “is” operators in Python?\n","\n","=The == operator checks whether two variables have the same value. The is operator checks whether two variables refer to the exact same object in memory.\n","\n","8.What are logical operators in Python?\n","\n","=Python has three logical operators: and, or, and not. These are used to combine multiple conditions in if statements or expressions\n","\n","9.What is type casting in Python?\n","\n","=Type casting is the process of converting one data type into another. For example, changing a string into an integer using int().\n","\n","10.What is the difference between implicit and explicit type casting?\n","\n","=Implicit type casting is done automatically by Python when needed (e.g., int + float becomes float). Explicit type casting is done manually using functions like int(), float(), or str().\n","\n","11.What is the purpose of conditional statements in Python?\n","\n","=Conditional statements like if, elif, and else allow a program to make decisions and run different blocks of code depending on conditions.\n","\n","12.How does the elif statement work?\n","\n","=The elif statement means “else if.” It lets you check multiple conditions after the initial if. If the if condition is False, Python checks the elif.\n","\n","13.What is the difference between for and while loops?\n","\n","=A for loop is used when we know how many times we want to run something. A while loop is used when we want to repeat an action until a certain condition becomes false.\n","\n","14.Describe a scenario where a while loop is more suitable than a for loop.\n","\n","=A while loop is better when the number of iterations is not known in advance. For example, asking a user for a correct password and repeating until they enter it right.\n","\n"],"metadata":{"id":"9xKlvsLBBfFi"}},{"cell_type":"markdown","source":["Python Practical Programs with Code"],"metadata":{"id":"D8SKbz2VDjLv"}},{"cell_type":"code","source":["# 1. Print \"Hello, World!\"\n","print(\"Hello, World!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lFUW0qA2CUUv","executionInfo":{"status":"ok","timestamp":1752397888849,"user_tz":-330,"elapsed":32,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"05e21c85-9e5c-438d-b426-3c655ff65712"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, World!\n"]}]},{"cell_type":"code","source":["#2.Display your name and age\n","name = \"Kumar\"\n","age = 22\n","print(\"My name is\", name)\n","print(\"I am\", age, \"years old\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xrz6ssLpDYfi","executionInfo":{"status":"ok","timestamp":1752398051101,"user_tz":-330,"elapsed":60,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"85baca03-4d64-48f9-d5a2-70020556cc76"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is Kumar\n","I am 22 years old\n"]}]},{"cell_type":"code","source":["#3.Print all Python keywords using the keyword module\n","import keyword\n","print(keyword.kwlist)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HFW2M5sUEDV4","executionInfo":{"status":"ok","timestamp":1752398122369,"user_tz":-330,"elapsed":22,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"f6a9e10c-d6bc-4225-f493-ee87637d9a53"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n"]}]},{"cell_type":"code","source":["#4.Check if a word is a Python keyword\n","import keyword\n","\n","word = input(\"Enter a word: \")\n","\n","if keyword.iskeyword(word):\n","    print(f\"'{word}' is a keyword.\")\n","else:\n","    print(f\"'{word}' is not a keyword.\")\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YymM41AREUwh","executionInfo":{"status":"ok","timestamp":1752398249251,"user_tz":-330,"elapsed":20801,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"d01f3aff-83ed-4c58-89cf-0c626c9a28fa"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a word: False\n","'False' is a keyword.\n"]}]},{"cell_type":"code","source":["#5. Demonstrate mutability with list and tuple\n","\n","my_list = [1, 2, 3]\n","my_tuple = (1, 2, 3)\n","\n","my_list[0] = 10\n","\n","print(\"List:\", my_list)\n","print(\"Tuple:\", my_tuple)\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"phnnRf-GEtTp","executionInfo":{"status":"ok","timestamp":1752398319093,"user_tz":-330,"elapsed":25,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"4061d5e5-9c4c-410b-82ed-5a81b8de07c7"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["List: [10, 2, 3]\n","Tuple: (1, 2, 3)\n","List: [10, 2, 3]\n","Tuple: (1, 2, 3)\n","List: [10, 2, 3]\n","Tuple: (1, 2, 3)\n"]}]},{"cell_type":"code","source":["#6. Function showing mutable vs immutable arguments\n","\n","def change_data(a_list, a_number):\n","    a_list.append(100)  # list is mutable\n","    a_number += 10      # number is immutable\n","    return a_number\n","\n","nums = [1, 2, 3]\n","num = 5\n","result = change_data(nums, num)\n","\n","print(\"List after function call:\", nums)\n","print(\"Number after function call:\", num)\n","print(\"Returned number:\", result)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pl0PGHbjFEwp","executionInfo":{"status":"ok","timestamp":1752398429794,"user_tz":-330,"elapsed":29,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"c96e8611-bd02-40fc-ceed-0463a9e92fa4"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["List after function call: [1, 2, 3, 100]\n","Number after function call: 5\n","Returned number: 15\n"]}]},{"cell_type":"code","source":["#7. Basic arithmetic operations\n","\n","a = int(input(\"Enter first number: \"))\n","b = int(input(\"Enter second number: \"))\n","\n","print(\"Addition:\", a + b)\n","print(\"Subtraction:\", a - b)\n","print(\"Multiplication:\", a * b)\n","print(\"Division:\", a / b)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4LyRl8KJFfz3","executionInfo":{"status":"ok","timestamp":1752398466259,"user_tz":-330,"elapsed":8463,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"515e1dba-d8be-4f9c-8ab5-2916a7e05638"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter first number: 10\n","Enter second number: 20\n","Addition: 30\n","Subtraction: -10\n","Multiplication: 200\n","Division: 0.5\n"]}]},{"cell_type":"code","source":["#8. Logical operator usage\n","\n","x = 10\n","print(x > 5 and x < 20)   # True\n","print(x < 5 or x > 20)    # False\n","print(not (x == 10))      # False\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DgaL8MRYFmp2","executionInfo":{"status":"ok","timestamp":1752398491760,"user_tz":-330,"elapsed":24,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"bf8ad446-3f19-4f9c-9d36-b9ab9aecaad9"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","False\n","False\n"]}]},{"cell_type":"code","source":["#9. Convert user input into different types\n","\n","value = input(\"Enter a value: \")\n","\n","print(\"As Integer:\", int(value))\n","print(\"As Float:\", float(value))\n","print(\"As Boolean:\", bool(value))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EevtkDG8Fu8E","executionInfo":{"status":"ok","timestamp":1752398548101,"user_tz":-330,"elapsed":2911,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"098ef198-34b9-4e07-e9bf-e5af9cec3cb2"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a value: 200\n","As Integer: 200\n","As Float: 200.0\n","As Boolean: True\n"]}]},{"cell_type":"code","source":["#10. Type casting with list elements\n","\n","str_numbers = ['1', '2', '3']\n","int_numbers = [int(i) for i in str_numbers]\n","print(int_numbers)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dfHPbQwmF0NR","executionInfo":{"status":"ok","timestamp":1752398588971,"user_tz":-330,"elapsed":48,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"b7b2b972-76db-4dba-bd00-2f08301faf59"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3]\n"]}]},{"cell_type":"code","source":["#11. Check if number is positive, negative, or zero\n","\n","\n","num = int(input(\"Enter a number: \"))\n","if num > 0:\n","    print(\"Positive\")\n","elif num < 0:\n","    print(\"Negative\")\n","else:\n","    print(\"Zero\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rY06vG1LGGqu","executionInfo":{"status":"ok","timestamp":1752398622378,"user_tz":-330,"elapsed":3804,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"c4fad6b2-e799-4fc5-b997-f2007ebad4b1"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 1\n","Positive\n"]}]},{"cell_type":"code","source":["#12. Print numbers from 1 to 10 using for loop\n","\n","for i in range(1, 11):\n","    print(i)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xItD3pomGN6J","executionInfo":{"status":"ok","timestamp":1752398646742,"user_tz":-330,"elapsed":53,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"c4469cf9-2ab4-463a-9556-3bfa8c3583bb"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["#13. Find sum of even numbers between 1 and 50\n","\n","sum_even = 0\n","for i in range(2, 51, 2):\n","    sum_even += i\n","print(\"Sum of even numbers:\", sum_even)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bX5GxlOUGUxY","executionInfo":{"status":"ok","timestamp":1752398672521,"user_tz":-330,"elapsed":25,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"c7359ab5-bce7-4e65-f473-c41da71b3a62"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum of even numbers: 650\n"]}]},{"cell_type":"code","source":["#14. Reverse a string using while loop\n","\n","text = input(\"Enter a string: \")\n","reversed_str = \"\"\n","i = len(text) - 1\n","\n","while i >= 0:\n","    reversed_str += text[i]\n","    i -= 1\n","\n","print(\"Reversed string:\", reversed_str)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dO1eQ0AMGbEu","executionInfo":{"status":"ok","timestamp":1752398699773,"user_tz":-330,"elapsed":7563,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"a3ad1571-0606-47cd-cfd0-b7677a4c73ad"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a string: kumar\n","Reversed string: ramuk\n"]}]},{"cell_type":"code","source":["#15. Factorial of a number using while loop\n","\n","n = int(input(\"Enter a number: \"))\n","fact = 1\n","i = 1\n","\n","while i <= n:\n","    fact *= i\n","    i += 1\n","\n","print(\"Factorial:\", fact)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hse4xZC9Gf33","executionInfo":{"status":"ok","timestamp":1752398749265,"user_tz":-330,"elapsed":3462,"user":{"displayName":"Kumar Patil","userId":"02980793704161376010"}},"outputId":"7a3dd49d-5812-4cae-820d-efcfdf58c0e7"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 12\n","Factorial: 479001600\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yDAPO8YPGs9z"},"execution_count":null,"outputs":[]}]}